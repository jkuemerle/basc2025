services:
  ctfd:
    build: 
      context: CTFd-3.7.4
      dockerfile: ../dockerfiles/Dockerfile.ctfd
    user: root
    restart: always
    ports:
      - "8290:8000"
    environment:
      - UPLOAD_FOLDER=/var/uploads
      - DATABASE_URL=mysql+pymysql://ctfd:ctfd@db/ctfd
      - REDIS_URL=redis://cache:6379
      - WORKERS=1
      - LOG_FOLDER=/var/log/CTFd
      - ACCESS_LOG=-
      - ERROR_LOG=-
      - REVERSE_PROXY=true
      - IMPORT_ID=BASC
    volumes:
      - .data/CTFd/logs:/var/log/CTFd
      - .data/CTFd/uploads:/var/uploads
      - .data/CTFd/events:/var/events
    depends_on:
      - db
    networks:
        default:
        internal:

  db:
    image: mariadb:10.11
    restart: always
    environment:
      - MARIADB_ROOT_PASSWORD=ctfd
      - MARIADB_USER=ctfd
      - MARIADB_PASSWORD=ctfd
      - MARIADB_DATABASE=ctfd
      - MARIADB_AUTO_UPGRADE=1
    volumes:
      - .data/mysql:/var/lib/mysql
    networks:
        internal:
    # This command is required to set important mariadb defaults
    command: [mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --wait_timeout=28800, --log-warnings=0]

  cache:
    image: redis:4
    restart: always
    volumes:
    - .data/redis:/data
    networks:
        internal:

  juiceshop:
    build: 
      context: juice-shop-17.1.1
      dockerfile: ../dockerfiles/Dockerfile.juice
    ports:
      - "8390:3000"
    environment:
      - NODE_ENV=ctf
      - CTF_KEY=L33tC0d!er
    networks:
        default:
  
  llmctf:
    build: 
      dockerfile: ./dockerfiles/Dockerfile.llmctf
    ports:
      - "8350:3000"
    environment:
      - PORT=3000
      - LLM_PROVIDER=OPENAI
      - LLM_MODEL=gpt-4o-mini
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LLM_CHALLENGES=/var/data/llm.yml
      - OLLAMA_BASE=http://host.docker.internal:11434
    volumes:
      - .data/llmctf/data:/var/data
    networks:
      default:

  client:
    build:
      context: elevation-of-privilege-0.16.0
      dockerfile: ../dockerfiles/Dockerfile.EOPClient
    ports:
      - '8360:8080'
    container_name: threats-client
    restart: unless-stopped

  server:
    build:
      context: elevation-of-privilege-0.16.0
      dockerfile: ../dockerfiles/Dockerfile.EOPServer
    container_name: threats-server
    restart: unless-stopped
    network_mode: service:client

networks:
    default:
    internal:
        internal: true
